//Bai 1

index.js

/**
 * 1. Check file package.json bạn sẽ thấy module password-generator nằm trong danh sách dependencies
 * 2. Đọc cách dùng module này dưới đây
 * https://www.npmjs.com/package/password-generator
 * 3. Tìm hiểu cách require một 3rd-party module trên repl.it: https://repl.it/site/blog/npm
 * 4. Require module này và tạo ra 1 password ngẫu nhiên có 8 ký tự, dạng dễ nhớ
 */

var generatePassword = require('password-generator');

console.log(generatePassword);


package-lock.json

{
  "requires": true,
  "lockfileVersion": 1,
  "dependencies": {
    "camelcase": {
      "version": "4.1.0",
      "resolved": "https://registry.npmjs.org/camelcase/-/camelcase-4.1.0.tgz",
      "integrity": "sha1-1UVjW+HjPFQmScaRc+Xeas+uNN0="
    },
    "password-generator": {
      "version": "2.2.0",
      "resolved": "https://registry.npmjs.org/password-generator/-/password-generator-2.2.0.tgz",
      "integrity": "sha1-/HXP95URCSPgVKWnFiNDMkC/Xkk=",
      "requires": {
        "yargs-parser": "^8.0.0"
      }
    },
    "yargs-parser": {
      "version": "8.1.0",
      "resolved": "https://registry.npmjs.org/yargs-parser/-/yargs-parser-8.1.0.tgz",
      "integrity": "sha512-yP+6QqN8BmrgW2ggLtTbdrOyBNSI7zBa4IykmiV5R1wl1JWNxQvWhMfMdmzIYtKU7oP3OOInY/tl2ov3BDjnJQ==",
      "requires": {
        "camelcase": "^4.1.0"
      }
    }
  }
}


package.json

{
  "main": "index.js",
  "dependencies": {
    "password-generator": "2.2.0"
  }
}



//bai 2

index.js

/**
 * 1. Sử dụng module `markdown` (https://www.npmjs.com/package/markdown) để chuyển đổi đoạn text (viết bằng markdown) sau sang html
 * 2. Tìm hiểu xem markdown là cái gì (dev nên biết về markdown)
 */

var markdownText = 'Hello *Coders.Tokyo*!';

var markdown = require('markdown').markdown;

console.log(markdown.toHTML(markdownText));

/* *.....* sang html là thành thẻ <em></em> 
  '....' thì thành thẻ <p></p>
*/

//package-lock.json

{
  "name": "SaneSpryServicepack",
  "version": "1.0.0",
  "lockfileVersion": 1,
  "requires": true,
  "dependencies": {
    "abbrev": {
      "version": "1.1.1",
      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q=="
    },
    "markdown": {
      "version": "0.5.0",
      "resolved": "https://registry.npmjs.org/markdown/-/markdown-0.5.0.tgz",
      "integrity": "sha1-KCBbVlqK51kt4gdGPWY33BgnIrI=",
      "requires": {
        "nopt": "~2.1.1"
      }
    },
    "nopt": {
      "version": "2.1.2",
      "resolved": "https://registry.npmjs.org/nopt/-/nopt-2.1.2.tgz",
      "integrity": "sha1-bMzZd7gBMqB3MdbozljCyDA8+a8=",
      "requires": {
        "abbrev": "1"
      }
    }
  }
}


//package.json

{
  "name": "SaneSpryServicepack",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "markdown": "^0.5.0"
  }
}


//bai 3
choose any npm to code on this git https://github.com/sindresorhus/awesome-nodejs/blob/master/readme.md 

empty-trash:chuyển thư mục và file vào thùng rác

var emptyTrash = require('empty-trash');

(async () => {
	await emptyTrash();
})();


async và await: nói nôm na là 1 cấp cao hơn của callback, dễ hiểu hơn là callback sẽ nằm tất cả sau await.
- await phải luôn luôn nằm trong nếu có khai báo async.
-async có thể đứng trc hoặc sau "function name"
